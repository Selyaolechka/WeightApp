// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace WeightApp.Client.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    public partial class MealInstanceModel
    {
        /// <summary>
        /// Initializes a new instance of the MealInstanceModel class.
        /// </summary>
        public MealInstanceModel() { }

        /// <summary>
        /// Initializes a new instance of the MealInstanceModel class.
        /// </summary>
        public MealInstanceModel(int mealInstanceId, MealTypeModel mealType, MealProductModel product, int goalId, int amount, DateTime date)
        {
            MealInstanceId = mealInstanceId;
            MealType = mealType;
            Product = product;
            GoalId = goalId;
            Amount = amount;
            Date = date;
        }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "mealInstanceId")]
        public int MealInstanceId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "mealType")]
        public MealTypeModel MealType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "product")]
        public MealProductModel Product { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "goalId")]
        public int GoalId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "amount")]
        public int Amount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "date")]
        public DateTime Date { get; set; }

        /// <summary>
        /// Validate the object. Throws ValidationException if validation fails.
        /// </summary>
        public virtual void Validate()
        {
            if (MealType == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "MealType");
            }
            if (Product == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Product");
            }
            if (this.MealType != null)
            {
                this.MealType.Validate();
            }
            if (this.Product != null)
            {
                this.Product.Validate();
            }
        }
    }
}
